package ch.bbw.zork;/** * Author:  Michael Kolling, Version: 1.1, Date: August 2000 * refactoring: Rinaldo Lanza, September 2020 */import java.util.HashMap;public class Room {	private String name;	private String description;	private HashMap<String, Room> exits;	private HashMap<String, Item> items;	public Room(String name, String description) {		this.name = name;		this.description = description;		this.exits = new HashMap<>();		this.items = new HashMap<>();	}	public String getName() {		return name;	}		/**	 * Da wird einen Item in einem Room eingelegt	 * @param item	 */	public void addItem(Item item) {		items.put(item.getName(), item);	}	public Item removeItem(String itemName) {		if(!items.containsKey(itemName)) {			return null;		}		Item item = items.get(itemName);		items.remove(itemName);		return item;	}		public boolean hasItem(String itemName) {		return items.containsKey(itemName);	}	/*	 * Hier werden Exits definiert	 */	public void setExits(Room rechts, Room links, Room back) {		exits.put("rechts", rechts);		exits.put("links", links);		exits.put("back", back);	}	public String shortDescription() {		return description;	}	/*	 * Das hier ist eine Beschreibung zum Raum wo man sich befindet.	 */		public String longDescription() {		StringBuilder stringBuilder = new StringBuilder("Du befindest dich " + description + ".\n");		stringBuilder.append("Du hast folgende Gegenst√§nde gefunden: ");		stringBuilder.append(itemNames()).append("\n");		stringBuilder.append(exitString());				return stringBuilder.toString();	}	private String exitString() {		return "Exits: " + String.join(", ", exits.keySet());	}		private String itemNames() {		return String.join(", ", items.keySet());	}	public Room nextRoom(String direction) {		return exits.get(direction);	}	public Item nextItem(String addItems) {		return items.get(addItems);	}}